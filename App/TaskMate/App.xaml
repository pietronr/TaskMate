<Application x:Class="TaskMate.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:TaskMate.ViewModels"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:surfaces="clr-namespace:TaskMate.Surfaces"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <vm:MainViewModel x:Key="MainViewModel"/>

            <Style x:Key="Header" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="17"/>
                <Setter Property="LineHeight" Value="24"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <Style x:Key="Body" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="LineHeight" Value="20"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <Style x:Key="Regular" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="LineHeight" Value="20"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <Style x:Key="Metadata" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="LineHeight" Value="16"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <Style x:Key="Tagline" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="LineHeight" Value="12"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <Style x:Key="BigIcon" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="LineHeight" Value="24"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>
            
            <Style x:Key="RegularIcon" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="LineHeight" Value="20"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <Style x:Key="SmallIcon" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="LineHeight" Value="16"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <Style x:Key="CustomDialogStyle" BasedOn="{StaticResource {x:Type dialogs:BaseMetroDialog}}" TargetType="{x:Type dialogs:CustomDialog}">
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
                <Setter Property="surfaces:DialogExtensions.DialogHostMaxWidth" Value="600"/>
                <Setter Property="surfaces:DialogExtensions.DialogHostMaxHeight" Value="600"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type dialogs:BaseMetroDialog}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="DialogShownStoryboard">
                                    <DoubleAnimation 
                                            Duration="0"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" />
                                    <DoubleAnimation 
                                            BeginTime="0:0:0"
                                            Duration="0:0:0.15"
                                            Storyboard.TargetName="OverlayBrush"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.3" />
                                    <DoubleAnimation 
                                            BeginTime="0:0:0.15"
                                            Duration="0:0:0.2"
                                            Storyboard.TargetName="DialogContent"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0" To="1" />
                                    <DoubleAnimation
                                            BeginTime="0:0:0.15"
                                            SpeedRatio="2.1"
                                            Duration="0:0:0.2"
                                            Storyboard.TargetName="DialogContent"
                                            Storyboard.TargetProperty="(Grid.LayoutTransform).(ScaleTransform.ScaleX)"
                                            From="1.06" To="1" />
                                    <DoubleAnimation
                                            BeginTime="0:0:0.15"
                                            Duration="0:0:0.2"
                                            SpeedRatio="2.1"
                                            Storyboard.TargetName="DialogContent"
                                            Storyboard.TargetProperty="(Grid.LayoutTransform).(ScaleTransform.ScaleY)"
                                            From="1.06" To="1" />
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Border x:Name="OverlayBrush" Background="Black" Opacity="0"/>
                                <Grid x:Name="DialogContent" MaxWidth="{TemplateBinding surfaces:DialogExtensions.DialogHostMaxWidth}" 
                                      Margin="15 30" MaxHeight="{TemplateBinding surfaces:DialogExtensions.DialogHostMaxHeight}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0">
                                    <Grid.LayoutTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    </Grid.LayoutTransform>
                                    <Border FocusVisualStyle="{x:Null}" Focusable="False" Padding="10" CornerRadius="8"
                                            Background="White">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="32" Opacity="0.4" ShadowDepth="4" Direction="-90"/>
                                        </Border.Effect>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ContentPresenter Grid.Row="0" Content="{TemplateBinding DialogTop}"/>
                                            <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                                            <ContentPresenter Grid.Row="2" Content="{TemplateBinding DialogBottom}" />
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard Storyboard="{StaticResource DialogShownStoryboard}" />
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AffirmativeButton" TargetType="{x:Type Button}">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="TextBlock.LineHeight" Value="20"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Padding" Value="4 0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Border" CornerRadius="4">
                                    <Border.Background>
                                        <SolidColorBrush Color="Green" Opacity="0.8"/>
                                    </Border.Background>
                                    <Border.RenderTransform>
                                        <ScaleTransform x:Name="HeaderTextScaleTransform" ScaleX="1" ScaleY="1" CenterX="0.5" CenterY="0.5" />
                                    </Border.RenderTransform>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver"/>
                                            <VisualState x:Name="Pressed"/>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <ContentPresenter x:Name="content" Content="{TemplateBinding Content}" 
                                                      TextBlock.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="NegativeButton" TargetType="{x:Type Button}">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="TextBlock.LineHeight" Value="20"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Padding" Value="4 0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Border" CornerRadius="4">
                                    <Border.Background>
                                        <SolidColorBrush Color="Red" Opacity="0.8"/>
                                    </Border.Background>
                                    <Border.RenderTransform>
                                        <ScaleTransform x:Name="HeaderTextScaleTransform" ScaleX="1" ScaleY="1" CenterX="0.5" CenterY="0.5" />
                                    </Border.RenderTransform>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver"/>
                                            <VisualState x:Name="Pressed"/>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <ContentPresenter x:Name="content" Content="{TemplateBinding Content}" 
                                                      TextBlock.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconButton" TargetType="{x:Type Button}">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="IconBorder" Background="Transparent" CornerRadius="3" Padding="{TemplateBinding Padding}">
                                <ContentPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="TextBlock.LineHeight" Value="20"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Border" Background="Transparent">
                                    <Border.RenderTransform>
                                        <ScaleTransform x:Name="HeaderTextScaleTransform" ScaleX="1" ScaleY="1" CenterX="0.5" CenterY="0.5" />
                                    </Border.RenderTransform>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver"/>
                                            <VisualState x:Name="Pressed"/>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <ContentPresenter x:Name="content" Content="{TemplateBinding Content}" 
                                                      TextBlock.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
                <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="Gray" />
                <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="Gray" />
                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3" />
                <Setter Property="Controls:TextBoxHelper.ButtonFontSize" Value="14" />
                <Setter Property="Controls:TextBoxHelper.ButtonWidth" Value="22" />
                <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
                <Setter Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
                <Setter Property="Controls:TextBoxHelper.WatermarkWrapping" Value="{Binding RelativeSource={RelativeSource Self}, Path=TextWrapping, Mode=OneWay}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Height" Value="24" />
                <Setter Property="Padding" Value="3 0 3 0" />
                <Setter Property="SelectionBrush" Value="Gray" />
                <Setter Property="SelectionOpacity" Value="0.4"/>
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                                    <Border x:Name="PART_WaitingForDataEffectGrid"
                                            Background="White"
                                            BorderBrush="Transparent"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </AdornerDecorator>
                                <Border x:Name="Base" CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                                        Background="White"
                                        BorderBrush="Gray"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid x:Name="PART_InnerGrid" Margin="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  Width="Auto" />
                                        <ColumnDefinition x:Name="TextColumn" Width="*" />
                                        <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                                        <ColumnDefinition  Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition x:Name="ButtonRow" Height="*" />
                                    </Grid.RowDefinitions>

                                    <ScrollViewer x:Name="PART_ContentHost"
                                          Grid.Row="1"
                                          Grid.Column="1"
                                          Margin="2"
                                          VerticalAlignment="Stretch"
                                          BorderThickness="0"
                                          IsTabStop="False" />
                                    <TextBlock x:Name="PART_Message"
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       Margin="3 3 3 0"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}"
                                       Text="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                                       TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}"
                                       TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}"
                                       TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}"
                                       Visibility="Collapsed" />
                                </Grid>
                                <Border x:Name="DisabledVisualElement"
                                        Background="White"
                                        BorderBrush="Gray"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        IsHitTestVisible="False"
                                        Opacity="0" CornerRadius="3"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Left">
                                    <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                                    <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                                    <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Right" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ClearTextButton)}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                                    <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                                </MultiDataTrigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Base" Property="BorderBrush" Value="Gray" />
                                    <Setter TargetName="Base" Property="Background" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="Base" Property="BorderBrush" 
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                                    <Setter TargetName="Base" Property="Background" Value="White" />
                                    <Setter TargetName="Base" Property="BorderThickness" Value="1"/>
                                </Trigger>
                                <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                                    <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SmallTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
                <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="Gray" />
                <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="Gray" />
                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3" />
                <Setter Property="Controls:TextBoxHelper.ButtonFontSize" Value="14" />
                <Setter Property="Controls:TextBoxHelper.ButtonWidth" Value="22" />
                <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
                <Setter Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
                <Setter Property="Controls:TextBoxHelper.WatermarkWrapping" Value="{Binding RelativeSource={RelativeSource Self}, Path=TextWrapping, Mode=OneWay}" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Padding" Value="3 0 3 0" />
                <Setter Property="SelectionBrush" Value="Gray" />
                <Setter Property="SelectionOpacity" Value="0.4"/>
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                                    <Border x:Name="PART_WaitingForDataEffectGrid"
                                            Background="White"
                                            BorderBrush="Transparent"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </AdornerDecorator>
                                <Border x:Name="Base" CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                                        Background="White"
                                        BorderBrush="Gray"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid x:Name="PART_InnerGrid" Margin="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  Width="Auto" />
                                        <ColumnDefinition x:Name="TextColumn" Width="*" />
                                        <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                                        <ColumnDefinition  Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition x:Name="ButtonRow" Height="*" />
                                    </Grid.RowDefinitions>

                                    <ScrollViewer x:Name="PART_ContentHost"
                                          Grid.Row="1"
                                          Grid.Column="1"
                                          Margin="2 0"
                                          VerticalAlignment="Stretch"
                                          BorderThickness="0"
                                          IsTabStop="False" />
                                    <TextBlock x:Name="PART_Message"
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       Margin="3 0 3 0"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}"
                                       Text="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                                       TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}"
                                       TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}"
                                       TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}"
                                       Visibility="Collapsed" />
                                </Grid>
                                <Border x:Name="DisabledVisualElement"
                                        Background="White"
                                        BorderBrush="Gray"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        IsHitTestVisible="False"
                                        Opacity="0" CornerRadius="3"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Left">
                                    <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                                    <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                                    <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Right" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ClearTextButton)}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                                    <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                                </MultiDataTrigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Base" Property="BorderBrush" Value="Gray" />
                                    <Setter TargetName="Base" Property="Background" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="Base" Property="BorderBrush" 
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                                    <Setter TargetName="Base" Property="Background" Value="White" />
                                    <Setter TargetName="Base" Property="BorderThickness" Value="1"/>
                                </Trigger>
                                <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                                    <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border" Width="13" Height="13" Background="Transparent" UseLayoutRounding="True" VerticalAlignment="Top"
                                            BorderThickness="1" BorderBrush="Gray" CornerRadius="2" SnapsToDevicePixels="True">
                                        <Grid Margin="-2" x:Name="Painel">
                                            <TextBlock x:Name="CheckMark" Visibility="Collapsed" FontFamily="Segoe MDL2 Assets" Text="&#xE73E;" 
                                                        FontSize="9" Foreground="Black" TextOptions.TextRenderingMode="Aliased" Margin="4" SnapsToDevicePixels="True" UseLayoutRounding="True"/>
                                            <Rectangle x:Name="Indeterminate" Visibility="Collapsed" Width="7" Height="7" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       Fill="White" TextOptions.TextRenderingMode="Aliased" Margin="4" SnapsToDevicePixels="True" UseLayoutRounding="True"/>
                                            <Border x:Name="BorderIn" BorderThickness="1" BorderBrush="Black" Visibility="Collapsed" />
                                        </Grid>
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="8,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                  RecognizesAccessKey="True"/>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                                    <Setter TargetName="Indeterminate" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.6"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid Height="24">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="22" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="Border" Grid.ColumnSpan="2" BorderBrush="Gray" Background="White" CornerRadius="2" BorderThickness="1"/>
                    <Border Grid.Column="0" Background="Transparent"/>
                </Grid>
            </ControlTemplate>
            
            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost" Focusable="False" Background="White" BorderThickness="1" BorderBrush="Gray" />
            </ControlTemplate>
            
            <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.ColumnSpan="3" Background="{TemplateBinding Background}"
                                              Focusable="false"  ClickMode="Release" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                                              RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                <Border x:Name="Border" BorderThickness="2" BorderBrush="Transparent" CornerRadius="2" SnapsToDevicePixels="True" Grid.ColumnSpan="3"/>
                                <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="10 7 10 0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Opacity="1"/>
                                <TextBlock x:Name="Arrow" Foreground="Gray" Text="&#xE70D;" FontFamily="Segoe MDL2 Assets" IsHitTestVisible="False" Visibility="Visible"
                                            HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="12" TextOptions.TextFormattingMode="Ideal" Margin="0 0 10 0" Grid.Column="2"/>
                                <Popup x:Name="PART_Popup" Placement="Bottom" AllowsTransparency="True" StaysOpen="True"
                                       Focusable="False" PopupAnimation="Fade" IsOpen="{TemplateBinding IsDropDownOpen}" HorizontalOffset="-4" VerticalOffset="-2">
                                    <Grid x:Name="DropDown" SnapsToDevicePixels="True" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" CornerRadius="8" BorderThickness="0 0 2 0" Margin="4">
                                            <Border.Background>
                                                <SolidColorBrush Color="LightGray"/>
                                            </Border.Background>
                                            <ScrollViewer Padding="1 5 0 3" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" VerticalScrollBarVisibility="Visible">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                                <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" 
                                         HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5 2 23 1" Focusable="True" Background="Transparent"
                                         Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" FontSize="{TemplateBinding FontSize}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="35" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ContentSite" Property="Opacity" Value="0.25" />
                                    <Setter TargetName="Arrow" Property="Opacity" Value="0.5" />
                                </Trigger>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter TargetName="PART_Popup" Property="Popup.Placement" Value="Bottom"/>
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0"/>
                                    <Setter TargetName="DropDownBorder" Property="Background" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger SourceName="PART_Popup" Property="AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="4" Opacity="0.30" BlurRadius="12"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Padding" Value="12 4" />
                <Setter Property="Height" Value="24"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Grid Margin="3 0 3 0">
                                <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"/>
                                <Border x:Name="HoverBackground" Background="Gray" Margin="0 2"
                                        Opacity="0.4" Visibility="Collapsed" CornerRadius="4" Padding="{TemplateBinding Padding}"/>
                                <Border x:Name="SelectedBackground" Background="LightBlue" Opacity="1" Visibility="Collapsed"
                                        CornerRadius="1.5" HorizontalAlignment="Left" Width="3" Height="16" VerticalAlignment="Center"/>
                                <ContentPresenter Margin="8 0 12 1" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="HoverBackground" Property="Opacity" Value="0.15"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HoverBackground" Property="Opacity" Value="0.27"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CustomDatePicker" TargetType="{x:Type DatePicker}">
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Padding" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
