<UserControl x:Class="TaskMate.Views.Dialogs.MyTasksDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:TaskMate.ViewModels.Tasks"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:enums="clr-namespace:TaskMate.Models.Tasks.Enums;assembly=TaskMate.Models"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:c="clr-namespace:TaskMate.Converters"
             mc:Ignorable="d" d:Background="White"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ObjectDataProvider x:Key="TaskPriorityEnum" MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:TaskPriority"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <c:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
        <c:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <c:BoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" ShowIfFalse="True"/>
    </UserControl.Resources>
    
    <Grid Margin="16" d:DataContext="{d:DesignInstance vm:MyTaskViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="0 0 0 16">
            <TextBlock Style="{StaticResource Header}" Text="Nova tarefa"
                       Visibility="{Binding IsNewEntry, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <TextBlock Style="{StaticResource Header}" Text="Editar tarefa"
                       Visibility="{Binding IsNewEntry, Converter={StaticResource InverseBoolToVisibilityConverter}}"/>
        </Grid>
        <Grid Grid.Row="1" Margin="0 0 0 16">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Margin="0 0 0 8">
                <UniformGrid Rows="4" Columns="2" Width="500" HorizontalAlignment="Left">
                    <TextBlock Style="{StaticResource Body}" Text="Título:" VerticalAlignment="Center" Margin="0 0 0 8"/>
                    <TextBox Text="{Binding Title}" Width="240" Height="24"/>
                    <TextBlock Style="{StaticResource Body}" Text="Descrição:" VerticalAlignment="Center" Margin="0 0 0 0"/>
                    <TextBox Text="{Binding Description}" Width="240" Height="24"/>
                    <TextBlock Style="{StaticResource Body}" Text="Data de conclusão:" VerticalAlignment="Center" Margin="0 0 0 0"/>
                    <DatePicker Style="{StaticResource CustomDatePicker}" Width="240" SelectedDate="{Binding DueDate}" Height="24"/>
                    <TextBlock Style="{StaticResource Body}" Text="Prioridade:" VerticalAlignment="Center" Margin="0 0 0 0"/>
                    <ComboBox Width="240" ItemsSource="{Binding Source={StaticResource TaskPriorityEnum}}" SelectedItem="{Binding Priority}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </UniformGrid>
            </StackPanel>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Margin="0">
                    <TextBlock Style="{StaticResource Body}" Text="To-Do's" Margin="0 0 0 4"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBox Text="{Binding CurrentToDo.Description}" Width="250" Height="24" Margin="0 0 4 0"/>
                        <Button Style="{StaticResource IconButton}" Margin="0 3 0 0" VerticalAlignment="Bottom" Command="{Binding AddToDoCommand}">
                            <TextBlock Style="{StaticResource RegularIcon}" Text="&#xE948;"/>
                        </Button>
                    </StackPanel>
                </StackPanel>
                <Grid Grid.Row="1">
                    <ItemsControl ItemsSource="{Binding ToDos}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Height="24">
                                    <StackPanel Orientation="Horizontal" Width="250" Margin="0 0 4 0"> 
                                        <Ellipse Width="8" Height="8" Fill="Gray" Margin="0 -4 4 0"/>
                                        <TextBlock Style="{StaticResource Metadata}" Text="{Binding Description}" Foreground="Gray" Margin="0 1 0 0"/>
                                    </StackPanel>
                                    <Button Style="{StaticResource IconButton}" 
                                            Command="{Binding Source={StaticResource MainViewModel}, Path=MyTasks.CurrentTask.RemoveToDoCommand}" CommandParameter="{Binding}">
                                        <TextBlock Style="{StaticResource RegularIcon}" Text="&#xE947;" Foreground="Red"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" VerticalAlignment="Bottom">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Style="{StaticResource NegativeButton}" Content="Cancelar" Margin="0 0 16 0" 
                        Command="{Binding DialogCommand}" CommandParameter="{x:Static dialogs:MessageDialogResult.Negative}"/>
                <Button Style="{StaticResource AffirmativeButton}" Content="Confirmar"
                        Command="{Binding DialogCommand}" CommandParameter="{x:Static dialogs:MessageDialogResult.Affirmative}"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
